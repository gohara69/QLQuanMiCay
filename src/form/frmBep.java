/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package form;

import DAO.DanhMucDAO;
import DAO.GiaNguyenLieuDAO;
import DAO.NguyenLieuDAO;
import DAO.NhanVienDAO;
import DAO.OrderMonDAO;
import DAO.PhanQuyenDAO;
import DAO.TinhTrangMonDAO;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import model.Ban;
import model.DanhMuc;
import model.GiaNguyenLieu;
import model.NguyenLieu;
import model.NhanVien;
import model.OrderMon;
import model.TinhTrang;
import swing.scrollbar;

/**
 *
 * @author VU HOANG
 */
public class frmBep extends javax.swing.JPanel {

    /**
     * Creates new form frmBep
     */
    public frmBep() {
        initComponents();
        spTable.getViewport().setBackground(Color.WHITE);
        JPanel p = new JPanel();
        spTable.setCorner(JScrollPane.UPPER_RIGHT_CORNER, p);
        spTable.setVerticalScrollBar(new scrollbar());
        txtBan.setHint("");
        
        loadDataToTableOrder();
        txtBan.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                loadDataFromSearch();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                loadDataFromSearch();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                loadDataFromSearch();
            }
                public void loadDataFromSearch() {
                    DefaultTableModel model = (DefaultTableModel) tblOrder.getModel();
                    model.setRowCount(0);
                    int soBan = 0;
                    try{
                        soBan = Integer.parseInt(txtBan.getText().trim());
                    } catch(NumberFormatException e){
                        JOptionPane.showMessageDialog(frmBep.this, "Vui lòng nhập đúng số bàn", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                        return;
                    }
                    Ban a = new Ban();
                    a.setB_SOBAN(soBan);
                    ArrayList<OrderMon> dsOrder = OrderMonDAO.layDanhOrderHoaDonChuaThanhToanTheoBan(a);
                    for(OrderMon o: dsOrder){
                        Vector info = new Vector();
                        info.add(o.getB_SOBAN());
                        info.add(o.getM_TEN());
                        info.add(o.getO_THOIGIAN());
                        info.add(o.getO_SOLUONG());
                        info.add(o.getO_GHICHU());

                        TinhTrang tt = TinhTrangMonDAO.layTinhTrangTheoMaTinhTrang(new TinhTrang(o.getTT_MON()));
                        info.add(tt.getMA_DIENGIAI());
                        if("".equals(o.getNV_ID())){
                            info.add(o.getNV_ID());
                        } else {
                            NhanVien nv = NhanVienDAO.layNhanVien(new NhanVien(o.getNV_ID()));
                            info.add(nv.getNV_TEN());
                        }

                        tblOrder.addRow(info);
                    }
                }
        });
    }
    
    public void clear(){
        DefaultTableModel dtm = (DefaultTableModel) tblOrder.getModel();
        dtm.setRowCount(0);
    }
    
    public void loadDataToTableOrder(){
        clear();
        ArrayList<OrderMon> dsOrder = OrderMonDAO.layDanhOrderHoaDonChuaThanhToan();
        for(OrderMon o: dsOrder){
            Vector info = new Vector();
            info.add(o.getB_SOBAN());
            info.add(o.getM_TEN());
            info.add(o.getO_THOIGIAN());
            info.add(o.getO_SOLUONG());
            info.add(o.getO_GHICHU());
            
            TinhTrang tt = TinhTrangMonDAO.layTinhTrangTheoMaTinhTrang(new TinhTrang(o.getTT_MON()));
            info.add(tt.getMA_DIENGIAI());
            if("".equals(o.getNV_ID())){
                info.add(o.getNV_ID());
            } else {
                NhanVien nv = NhanVienDAO.layNhanVien(new NhanVien(o.getNV_ID()));
                info.add(nv.getNV_TEN());
            }
            
            tblOrder.addRow(info);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBorder1 = new swing.panelBorder();
        spTable = new javax.swing.JScrollPane();
        tblOrder = new swing.table();
        jLabel1 = new javax.swing.JLabel();
        txtBan = new swing.searchText();
        btnPhanCong = new swing.button();
        btnReload = new javax.swing.JLabel();

        panelBorder1.setBackground(new java.awt.Color(255, 255, 255));

        spTable.setBorder(null);

        tblOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Bàn", "Món", "Thời gian order", "Số lượng", "Ghi chú", "Tình trạng", "Nhân viên"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        spTable.setViewportView(tblOrder);
        if (tblOrder.getColumnModel().getColumnCount() > 0) {
            tblOrder.getColumnModel().getColumn(0).setMinWidth(50);
            tblOrder.getColumnModel().getColumn(0).setMaxWidth(50);
            tblOrder.getColumnModel().getColumn(3).setMinWidth(80);
            tblOrder.getColumnModel().getColumn(3).setMaxWidth(80);
        }

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spTable, javax.swing.GroupLayout.DEFAULT_SIZE, 863, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spTable, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Bàn");

        btnPhanCong.setText("Phân công món");
        btnPhanCong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPhanCongActionPerformed(evt);
            }
        });

        btnReload.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/reload (1).png"))); // NOI18N
        btnReload.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnReloadMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtBan, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnReload)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPhanCong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnPhanCong, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnReload)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(txtBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPhanCongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPhanCongActionPerformed
        if(!PhanQuyenDAO.kiemTraCoQuyenPhanCongMon(main.main.tkhoan)){
            JOptionPane.showMessageDialog(this, "Bạn không có quyền phân công");
            return;
        }
        
        frmPhanCongNhom frm = new frmPhanCongNhom();
        frm.setVisible(true);
        frm.setLocation(320, 85);
    }//GEN-LAST:event_btnPhanCongActionPerformed

    private void btnReloadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReloadMouseClicked
        loadDataToTableOrder();
    }//GEN-LAST:event_btnReloadMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private swing.button btnPhanCong;
    private javax.swing.JLabel btnReload;
    private javax.swing.JLabel jLabel1;
    private swing.panelBorder panelBorder1;
    private javax.swing.JScrollPane spTable;
    private swing.table tblOrder;
    private swing.searchText txtBan;
    // End of variables declaration//GEN-END:variables
}
